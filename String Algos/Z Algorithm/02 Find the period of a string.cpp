// https://www.youtube.com/watch?v=bS33M8pKFNU

/*
Problem:
Find period of string, i.e. minimum length of substring by which given string can be generated by appending one or more such substrings.

Example:
String:    a a b a a b a a b a  a  b
Str-index: 0 1 2 3 4 5 6 7 8 9 10 11
z[]:       0 1 0 9 1 0 6 1 0 3  1  0 

Result:
Period = 3
String = aab



For periodic, 2 conditions must be satisfied:

Condition 1:
Smallest i such that (i + z[i] == n) 
Period = i

Condition 2: n must be multiple of period


n = 12
Since (3 + z[3] == n) period = 3
*/


int z[100005];

void z_algo(string s) {
    ll n = s.size();
    ll l = 0, r = 0;
    z[0] = 0;
    for(ll i = 1; i < n; i++) {
        if(i > r) {
            l = r = i;
            while(r < n and s[r] == s[r - l]) {
                r++;
            }
            z[i] = r - l;
            r--;
        }else{
            ll idx = i - l;
            if(i + z[idx] <= r) {
                z[i] = z[idx];
            }else{
                l = i;
                while(r < n and s[r] == s[r - l]) {
                    r++;
                }
                z[i] = r - l;
                r--;
            }
        }
    }
}

void solve(){
    int x, y;
    string s;
    cin >> s;
    n = s.length();
    z_algo(s);

    int period = 0;
    f(i, n) {
        if(i + z[i] == n) {
            period = i;
            break;
        }
    }

    if(period and (n % period == 0)) {
        cout << period << endl;
        cout << s.substr(0, period);
    } else {
        cout << "Aperiodic\n";
    }
}

signed main() {
    IOS
    clock_t begin = clock();
    int t = 1;
    // cin >> t;
    f(i, t) {
        solve();
    }
    cerr<<"Time elapsed: "<<(clock()-begin)*1000.0/CLOCKS_PER_SEC<<"ms"<<'\n';
}
